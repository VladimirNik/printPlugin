package org.squeryl.dsl.boilerplate {
  import org.squeryl.dsl.QueryYield;
  import org.squeryl.{Queryable, Query};
  abstract trait FromSignatures extends scala.AnyRef {
    def /*FromSignatures*/$init$(): Unit = {
      ()
    };
    def from[T1 >: Nothing <: Any, R >: Nothing <: Any](t1: org.squeryl.Queryable[T1])(f: T1 => org.squeryl.dsl.QueryYield[R]): org.squeryl.Query[R] = new org.squeryl.dsl.boilerplate.Query1[T1,R](t1, f, true);
    def from[T1 >: Nothing <: Any, T2 >: Nothing <: Any, R >: Nothing <: Any](t1: org.squeryl.Queryable[T1], t2: org.squeryl.Queryable[T2])(f: (T1, T2) => org.squeryl.dsl.QueryYield[R]): org.squeryl.Query[R] = new org.squeryl.dsl.boilerplate.Query2[T1,T2,R](t1, t2, f, true);
    def from[T1 >: Nothing <: Any, T2 >: Nothing <: Any, T3 >: Nothing <: Any, R >: Nothing <: Any](t1: org.squeryl.Queryable[T1], t2: org.squeryl.Queryable[T2], t3: org.squeryl.Queryable[T3])(f: (T1, T2, T3) => org.squeryl.dsl.QueryYield[R]): org.squeryl.Query[R] = new org.squeryl.dsl.boilerplate.Query3[T1,T2,T3,R](t1, t2, t3, f, true);
    def from[T1 >: Nothing <: Any, T2 >: Nothing <: Any, T3 >: Nothing <: Any, T4 >: Nothing <: Any, R >: Nothing <: Any](t1: org.squeryl.Queryable[T1], t2: org.squeryl.Queryable[T2], t3: org.squeryl.Queryable[T3], t4: org.squeryl.Queryable[T4])(f: (T1, T2, T3, T4) => org.squeryl.dsl.QueryYield[R]): org.squeryl.Query[R] = new org.squeryl.dsl.boilerplate.Query4[T1,T2,T3,T4,R](t1, t2, t3, t4, f, true);
    def from[T1 >: Nothing <: Any, T2 >: Nothing <: Any, T3 >: Nothing <: Any, T4 >: Nothing <: Any, T5 >: Nothing <: Any, R >: Nothing <: Any](t1: org.squeryl.Queryable[T1], t2: org.squeryl.Queryable[T2], t3: org.squeryl.Queryable[T3], t4: org.squeryl.Queryable[T4], t5: org.squeryl.Queryable[T5])(f: (T1, T2, T3, T4, T5) => org.squeryl.dsl.QueryYield[R]): org.squeryl.Query[R] = new org.squeryl.dsl.boilerplate.Query5[T1,T2,T3,T4,T5,R](t1, t2, t3, t4, t5, f, true);
    def from[T1 >: Nothing <: Any, T2 >: Nothing <: Any, T3 >: Nothing <: Any, T4 >: Nothing <: Any, T5 >: Nothing <: Any, T6 >: Nothing <: Any, R >: Nothing <: Any](t1: org.squeryl.Queryable[T1], t2: org.squeryl.Queryable[T2], t3: org.squeryl.Queryable[T3], t4: org.squeryl.Queryable[T4], t5: org.squeryl.Queryable[T5], t6: org.squeryl.Queryable[T6])(f: (T1, T2, T3, T4, T5, T6) => org.squeryl.dsl.QueryYield[R]): org.squeryl.Query[R] = new org.squeryl.dsl.boilerplate.Query6[T1,T2,T3,T4,T5,T6,R](t1, t2, t3, t4, t5, t6, f, true);
    def from[T1 >: Nothing <: Any, T2 >: Nothing <: Any, T3 >: Nothing <: Any, T4 >: Nothing <: Any, T5 >: Nothing <: Any, T6 >: Nothing <: Any, T7 >: Nothing <: Any, R >: Nothing <: Any](t1: org.squeryl.Queryable[T1], t2: org.squeryl.Queryable[T2], t3: org.squeryl.Queryable[T3], t4: org.squeryl.Queryable[T4], t5: org.squeryl.Queryable[T5], t6: org.squeryl.Queryable[T6], t7: org.squeryl.Queryable[T7])(f: (T1, T2, T3, T4, T5, T6, T7) => org.squeryl.dsl.QueryYield[R]): org.squeryl.Query[R] = new org.squeryl.dsl.boilerplate.Query7[T1,T2,T3,T4,T5,T6,T7,R](t1, t2, t3, t4, t5, t6, t7, f, true);
    def from[T1 >: Nothing <: Any, T2 >: Nothing <: Any, T3 >: Nothing <: Any, T4 >: Nothing <: Any, T5 >: Nothing <: Any, T6 >: Nothing <: Any, T7 >: Nothing <: Any, T8 >: Nothing <: Any, R >: Nothing <: Any](t1: org.squeryl.Queryable[T1], t2: org.squeryl.Queryable[T2], t3: org.squeryl.Queryable[T3], t4: org.squeryl.Queryable[T4], t5: org.squeryl.Queryable[T5], t6: org.squeryl.Queryable[T6], t7: org.squeryl.Queryable[T7], t8: org.squeryl.Queryable[T8])(f: (T1, T2, T3, T4, T5, T6, T7, T8) => org.squeryl.dsl.QueryYield[R]): org.squeryl.Query[R] = new org.squeryl.dsl.boilerplate.Query8[T1,T2,T3,T4,T5,T6,T7,T8,R](t1, t2, t3, t4, t5, t6, t7, t8, f, true);
    def from[T1 >: Nothing <: Any, T2 >: Nothing <: Any, T3 >: Nothing <: Any, T4 >: Nothing <: Any, T5 >: Nothing <: Any, T6 >: Nothing <: Any, T7 >: Nothing <: Any, T8 >: Nothing <: Any, T9 >: Nothing <: Any, R >: Nothing <: Any](t1: org.squeryl.Queryable[T1], t2: org.squeryl.Queryable[T2], t3: org.squeryl.Queryable[T3], t4: org.squeryl.Queryable[T4], t5: org.squeryl.Queryable[T5], t6: org.squeryl.Queryable[T6], t7: org.squeryl.Queryable[T7], t8: org.squeryl.Queryable[T8], t9: org.squeryl.Queryable[T9])(f: (T1, T2, T3, T4, T5, T6, T7, T8, T9) => org.squeryl.dsl.QueryYield[R]): org.squeryl.Query[R] = new org.squeryl.dsl.boilerplate.Query9[T1,T2,T3,T4,T5,T6,T7,T8,T9,R](t1, t2, t3, t4, t5, t6, t7, t8, t9, f, true);
    def from[T1 >: Nothing <: Any, T2 >: Nothing <: Any, T3 >: Nothing <: Any, T4 >: Nothing <: Any, T5 >: Nothing <: Any, T6 >: Nothing <: Any, T7 >: Nothing <: Any, T8 >: Nothing <: Any, T9 >: Nothing <: Any, T10 >: Nothing <: Any, R >: Nothing <: Any](t1: org.squeryl.Queryable[T1], t2: org.squeryl.Queryable[T2], t3: org.squeryl.Queryable[T3], t4: org.squeryl.Queryable[T4], t5: org.squeryl.Queryable[T5], t6: org.squeryl.Queryable[T6], t7: org.squeryl.Queryable[T7], t8: org.squeryl.Queryable[T8], t9: org.squeryl.Queryable[T9], t10: org.squeryl.Queryable[T10])(f: (T1, T2, T3, T4, T5, T6, T7, T8, T9, T10) => org.squeryl.dsl.QueryYield[R]): org.squeryl.Query[R] = new org.squeryl.dsl.boilerplate.Query10[T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,R](t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, f, true)
  }
}