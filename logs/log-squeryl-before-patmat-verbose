[info] Loading project definition from /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/project
[info] Set current project to squeryl (in build file:/home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/)
[info] Loading project definition from /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/project
[debug] Running task... Cancelable: false, check cycles: false
[debug] 
[debug] Initial source changes: 
[debug] 	removed:Set()
[debug] 	added: Set()
[debug] 	modified: Set()
[debug] Removed products: Set()
[debug] Modified external sources: Set()
[debug] Modified binary dependencies: Set()
[debug] Initial directly invalidated sources: Set()
[debug] 
[debug] Sources indirectly invalidated by:
[debug] 	product: Set()
[debug] 	binary dep: Set()
[debug] 	external source: Set()
[debug] All initially invalidated sources: Set()
[debug] Copy resource mappings: 
[debug] 	
[info] Set current project to squeryl (in build file:/home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/)
[info] Compiling 67 Scala sources to /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/target/scala-2.10/classes...
[info] [search path for source files: ]
[info] [search path for class files: /usr/lib/jvm/java-7-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-7-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-7-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-7-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-7-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-7-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-7-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-7-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-7-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-7-oracle/jre/lib/ext/zipfs.jar:/home/vova/.sbt/boot/scala-2.10.0/lib/scala-library.jar:/home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/target/scala-2.10/classes:/home/vova/.ivy2/cache/cglib/cglib-nodep/jars/cglib-nodep-2.2.jar:/home/vova/.ivy2/cache/org.scala-lang/scalap/jars/scalap-2.10.0.jar:/home/vova/.sbt/boot/scala-2.10.0/lib/scala-compiler.jar:/home/vova/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.10.0.jar:/home/vova/.ivy2/cache/com.h2database/h2/jars/h2-1.2.127.jar:/home/vova/.ivy2/cache/mysql/mysql-connector-java/jars/mysql-connector-java-5.1.10.jar:/home/vova/.ivy2/cache/postgresql/postgresql/jars/postgresql-8.4-701.jdbc4.jar:/home/vova/.ivy2/cache/net.sourceforge.jtds/jtds/jars/jtds-1.2.4.jar:/home/vova/.ivy2/cache/org.apache.derby/derby/jars/derby-10.7.1.1.jar:/home/vova/.ivy2/cache/junit/junit/jars/junit-4.8.2.jar]
[info] [loaded package loader resources.jar in 177ms]
[info] [loaded package loader java in 1ms]
[info] [loaded package loader lang in 18ms]
[info] [loaded package loader annotation in 1ms]
[info] [loaded class file /home/vova/.sbt/boot/scala-2.10.0/lib/scala-library.jar(scala/reflect/package.class) in 28ms]
[info] [loaded package loader reflect in 34ms]
[info] [loaded class file /home/vova/.sbt/boot/scala-2.10.0/lib/scala-library.jar(scala/package.class) in 74ms]
[info] [loaded package loader scala in 141ms]
[info] [loaded class file /home/vova/.sbt/boot/scala-2.10.0/lib/scala-library.jar(scala/runtime/package.class) in 1ms]
[info] [loaded package loader runtime in 21ms]
[info] [loaded class file /home/vova/.sbt/boot/scala-2.10.0/lib/scala-library.jar(scala/collection/package.class) in 1ms]
[info] [loaded package loader collection in 27ms]
[info] [loaded class file /usr/lib/jvm/java-7-oracle/jre/lib/rt.jar(java/lang/Object.class) in 22ms]
[info] [loaded package loader io in 7ms]
[info] [loaded package loader util in 15ms]
[info] [loaded package loader nio in 4ms]
[info] [loaded package loader charset in 2ms]
[info] [loaded class file /usr/lib/jvm/java-7-oracle/jre/lib/rt.jar(java/lang/String.class) in 105ms]
[info] [loaded class file /usr/lib/jvm/java-7-oracle/jre/lib/rt.jar(java/lang/Comparable.class) in 2ms]
[info] [loaded class file /usr/lib/jvm/java-7-oracle/jre/lib/rt.jar(java/io/Serializable.class) in 0ms]
[info] [dropping dependency on node with no phase object: msil]
[info] [promote the dependency of explicitouter: tailcalls => specialize]
[info] [promote the dependency of patmat: typer => xsbt-api]
[info] [promote the dependency of lazyvals: erasure => posterasure]
[info] [loaded package loader beans in 0ms]
[info] [parsing KeyedEntity.scala]
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:50: in XML literal: in XML content, please use '}}' to express '}'
[error]   };
[error]   ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:48:  I encountered a '}' where I didn't expect one, maybe this tag isn't closed <accessor>
[error]     <accessor> private[squeryl] def _isPersisted_=(x$1: Boolean): Unit = PersistenceStatus.this._isPersisted = x$1;
[error]      ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:60: in XML literal: in XML content, please use '}}' to express '}'
[error]   };
[error]   ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:59:  I encountered a '}' where I didn't expect one, maybe this tag isn't closed <accessor>
[error]     <stable> <accessor> protected def occVersionNumber: Int = Optimistic.this.occVersionNumber
[error]               ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:62: identifier expected but $XMLSTART$< found.
[error]     def <init>(): org.squeryl.SquerylSQLException.type = {
[error]         ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:69: in XML literal: in XML content, please use '}}' to express '}'
[error]   };
[error]   ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:68:  I encountered a '}' where I didn't expect one, maybe this tag isn't closed <synthetic>
[error]     <synthetic> private def readResolve(): Object = squeryl.this.SquerylSQLException
[error]      ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:78: in XML literal: in XML content, please use '}}' to express '}'
[error]   };
[error]   ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:73:  I encountered a '}' where I didn't expect one, maybe this tag isn't closed <init>
[error]     def <init>(message: String, cause: Option[java.sql.SQLException]): org.squeryl.SquerylSQLException = {
[error]          ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:85: in XML literal: in XML content, please use '}}' to express '}'
[error]   };
[error]   ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:81:  I encountered a '}' where I didn't expect one, maybe this tag isn't closed <init>
[error]     def <init>(message: String): org.squeryl.StaleUpdateException = {
[error]          ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:114: in XML literal: in XML content, please use '}}' to express '}'
[error]   }
[error]   ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:106:  I encountered a '}' where I didn't expect one, maybe this tag isn't closed <accessor>
[error]     <accessor> private def _referentialActions_=(x$1: Option[(Option[org.squeryl.ReferentialAction], Option[org.squeryl.ReferentialAction])]): Unit = ForeignKeyDeclaration.this._referentialActions = x$1;
[error]      ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/KeyedEntity.scala:115: '}' expected but eof found.
[error] }
[error]  ^
[info] [parsing PrimitiveTypeMode.scala]
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:11: identifier expected but $XMLSTART$< found.
[error]     def <init>(): org.squeryl.PrimitiveTypeMode.type = {
[error]         ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:17: identifier expected but $XMLSTART$< found.
[error]     def <init>(): org.squeryl.InternalFieldMapper.type = {
[error]         ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:27: expected start of definition
[error]     implicit <stable> <accessor> def stringTEF: org.squeryl.dsl.TypedExpressionFactory[String,org.squeryl.dsl.TString] with org.squeryl.dsl.PrimitiveJdbcMapper[String]{val sample: String; val defaultColumnLength: Int} = PrimitiveTypeMode.this.stringTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:29: expected start of definition
[error]     implicit <stable> <accessor> def optionStringTEF: org.squeryl.dsl.TypedExpressionFactory[Option[String],org.squeryl.dsl.TOptionString] with org.squeryl.dsl.DeOptionizer[String,String,org.squeryl.dsl.TString,Option[String],org.squeryl.dsl.TOptionString]{val deOptionizer: org.squeryl.dsl.TypedExpressionFactory[String,org.squeryl.dsl.TString] with org.squeryl.dsl.PrimitiveJdbcMapper[String]{val sample: String; val defaultColumnLength: Int}} = PrimitiveTypeMode.this.optionStringTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:31: expected start of definition
[error]     implicit <stable> <accessor> def dateTEF: org.squeryl.dsl.TypedExpressionFactory[java.util.Date,org.squeryl.dsl.TDate] with org.squeryl.dsl.PrimitiveJdbcMapper[java.util.Date]{val sample: java.util.Date; val defaultColumnLength: Int; def extractNativeJdbcValue(rs: java.sql.ResultSet,i: Int): java.sql.Date} = PrimitiveTypeMode.this.dateTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:33: expected start of definition
[error]     implicit <stable> <accessor> def optionDateTEF: org.squeryl.dsl.TypedExpressionFactory[Option[java.util.Date],org.squeryl.dsl.TOptionDate] with org.squeryl.dsl.DeOptionizer[java.util.Date,java.util.Date,org.squeryl.dsl.TDate,Option[java.util.Date],org.squeryl.dsl.TOptionDate]{val deOptionizer: org.squeryl.dsl.TypedExpressionFactory[java.util.Date,org.squeryl.dsl.TDate] with org.squeryl.dsl.PrimitiveJdbcMapper[java.util.Date]{val sample: java.util.Date; val defaultColumnLength: Int; def extractNativeJdbcValue(rs: java.sql.ResultSet,i: Int): java.sql.Date}} = PrimitiveTypeMode.this.optionDateTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:35: expected start of definition
[error]     implicit <stable> <accessor> def timestampTEF: org.squeryl.dsl.TypedExpressionFactory[java.sql.Timestamp,org.squeryl.dsl.TTimestamp] with org.squeryl.dsl.PrimitiveJdbcMapper[java.sql.Timestamp]{val sample: java.sql.Timestamp; val defaultColumnLength: Int} = PrimitiveTypeMode.this.timestampTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:37: expected start of definition
[error]     implicit <stable> <accessor> def optionTimestampTEF: org.squeryl.dsl.TypedExpressionFactory[Option[java.sql.Timestamp],org.squeryl.dsl.TOptionTimestamp] with org.squeryl.dsl.DeOptionizer[java.sql.Timestamp,java.sql.Timestamp,org.squeryl.dsl.TTimestamp,Option[java.sql.Timestamp],org.squeryl.dsl.TOptionTimestamp]{val deOptionizer: org.squeryl.dsl.TypedExpressionFactory[java.sql.Timestamp,org.squeryl.dsl.TTimestamp] with org.squeryl.dsl.PrimitiveJdbcMapper[java.sql.Timestamp]{val sample: java.sql.Timestamp; val defaultColumnLength: Int}} = PrimitiveTypeMode.this.optionTimestampTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:39: expected start of definition
[error]     implicit <stable> <accessor> def doubleArrayTEF: org.squeryl.internals.ArrayTEF[Double,org.squeryl.dsl.TDoubleArray]{val sample: Array[Double]} = PrimitiveTypeMode.this.doubleArrayTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:41: expected start of definition
[error]     implicit <stable> <accessor> def intArrayTEF: org.squeryl.internals.ArrayTEF[Int,org.squeryl.dsl.TIntArray]{val sample: Array[Int]} = PrimitiveTypeMode.this.intArrayTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:43: expected start of definition
[error]     implicit <stable> <accessor> def longArrayTEF: org.squeryl.internals.ArrayTEF[Long,org.squeryl.dsl.TLongArray]{val sample: Array[Long]} = PrimitiveTypeMode.this.longArrayTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:45: expected start of definition
[error]     implicit <stable> <accessor> def stringArrayTEF: org.squeryl.internals.ArrayTEF[String,org.squeryl.dsl.TStringArray]{val sample: Array[String]} = PrimitiveTypeMode.this.stringArrayTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:47: expected start of definition
[error]     implicit <stable> <accessor> def byteTEF: org.squeryl.dsl.IntegralTypedExpressionFactory[Byte,org.squeryl.dsl.TByte,Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Byte]{val sample: Byte; val defaultColumnLength: Int; val floatifyer: org.squeryl.dsl.FloatTypedExpressionFactory[Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Float]{val sample: Float; val defaultColumnLength: Int}} = PrimitiveTypeMode.this.byteTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:49: expected start of definition
[error]     implicit <stable> <accessor> def optionByteTEF: org.squeryl.dsl.IntegralTypedExpressionFactory[Option[Byte],org.squeryl.dsl.TOptionByte,Option[Float],org.squeryl.dsl.TOptionFloat] with org.squeryl.dsl.DeOptionizer[Byte,Byte,org.squeryl.dsl.TByte,Option[Byte],org.squeryl.dsl.TOptionByte]{val deOptionizer: org.squeryl.dsl.IntegralTypedExpressionFactory[Byte,org.squeryl.dsl.TByte,Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Byte]{val sample: Byte; val defaultColumnLength: Int; val floatifyer: org.squeryl.dsl.FloatTypedExpressionFactory[Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Float]{val sample: Float; val defaultColumnLength: Int}}; val floatifyer: org.squeryl.dsl.FloatTypedExpressionFactory[Option[Float],org.squeryl.dsl.TOptionFloat] with org.squeryl.dsl.DeOptionizer[Float,Float,org.squeryl.dsl.TFloat,Option[Float],org.squeryl.dsl.TOptionFloat]{val deOptionizer: org.squeryl.dsl.FloatTypedExpressionFactory[Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Float]{val sample: Float; val defaultColumnLength: Int}}} = PrimitiveTypeMode.this.optionByteTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:51: expected start of definition
[error]     implicit <stable> <accessor> def intTEF: org.squeryl.dsl.IntegralTypedExpressionFactory[Int,org.squeryl.dsl.TInt,Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Int]{val sample: Int; val defaultColumnLength: Int; val floatifyer: org.squeryl.dsl.FloatTypedExpressionFactory[Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Float]{val sample: Float; val defaultColumnLength: Int}} = PrimitiveTypeMode.this.intTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:53: expected start of definition
[error]     implicit <stable> <accessor> def optionIntTEF: org.squeryl.dsl.IntegralTypedExpressionFactory[Option[Int],org.squeryl.dsl.TOptionInt,Option[Float],org.squeryl.dsl.TOptionFloat] with org.squeryl.dsl.DeOptionizer[Int,Int,org.squeryl.dsl.TInt,Option[Int],org.squeryl.dsl.TOptionInt]{val deOptionizer: org.squeryl.dsl.IntegralTypedExpressionFactory[Int,org.squeryl.dsl.TInt,Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Int]{val sample: Int; val defaultColumnLength: Int; val floatifyer: org.squeryl.dsl.FloatTypedExpressionFactory[Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Float]{val sample: Float; val defaultColumnLength: Int}}; val floatifyer: org.squeryl.dsl.FloatTypedExpressionFactory[Option[Float],org.squeryl.dsl.TOptionFloat] with org.squeryl.dsl.DeOptionizer[Float,Float,org.squeryl.dsl.TFloat,Option[Float],org.squeryl.dsl.TOptionFloat]{val deOptionizer: org.squeryl.dsl.FloatTypedExpressionFactory[Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Float]{val sample: Float; val defaultColumnLength: Int}}} = PrimitiveTypeMode.this.optionIntTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:55: expected start of definition
[error]     implicit <stable> <accessor> def longTEF: org.squeryl.dsl.IntegralTypedExpressionFactory[Long,org.squeryl.dsl.TLong,Double,org.squeryl.dsl.TDouble] with org.squeryl.dsl.PrimitiveJdbcMapper[Long]{val sample: Long; val defaultColumnLength: Int; val floatifyer: org.squeryl.dsl.FloatTypedExpressionFactory[Double,org.squeryl.dsl.TDouble] with org.squeryl.dsl.PrimitiveJdbcMapper[Double]{val sample: Double; val defaultColumnLength: Int}} = PrimitiveTypeMode.this.longTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:57: expected start of definition
[error]     implicit <stable> <accessor> def optionLongTEF: org.squeryl.dsl.IntegralTypedExpressionFactory[Option[Long],org.squeryl.dsl.TOptionLong,Option[Double],org.squeryl.dsl.TOptionDouble] with org.squeryl.dsl.DeOptionizer[Long,Long,org.squeryl.dsl.TLong,Option[Long],org.squeryl.dsl.TOptionLong]{val deOptionizer: org.squeryl.dsl.IntegralTypedExpressionFactory[Long,org.squeryl.dsl.TLong,Double,org.squeryl.dsl.TDouble] with org.squeryl.dsl.PrimitiveJdbcMapper[Long]{val sample: Long; val defaultColumnLength: Int; val floatifyer: org.squeryl.dsl.FloatTypedExpressionFactory[Double,org.squeryl.dsl.TDouble] with org.squeryl.dsl.PrimitiveJdbcMapper[Double]{val sample: Double; val defaultColumnLength: Int}}; val floatifyer: org.squeryl.dsl.FloatTypedExpressionFactory[Option[Double],org.squeryl.dsl.TOptionDouble] with org.squeryl.dsl.DeOptionizer[Double,Double,org.squeryl.dsl.TDouble,Option[Double],org.squeryl.dsl.TOptionDouble]{val deOptionizer: org.squeryl.dsl.FloatTypedExpressionFactory[Double,org.squeryl.dsl.TDouble] with org.squeryl.dsl.PrimitiveJdbcMapper[Double]{val sample: Double; val defaultColumnLength: Int}}} = PrimitiveTypeMode.this.optionLongTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:59: expected start of definition
[error]     implicit <stable> <accessor> def floatTEF: org.squeryl.dsl.FloatTypedExpressionFactory[Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Float]{val sample: Float; val defaultColumnLength: Int} = PrimitiveTypeMode.this.floatTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:61: expected start of definition
[error]     implicit <stable> <accessor> def optionFloatTEF: org.squeryl.dsl.FloatTypedExpressionFactory[Option[Float],org.squeryl.dsl.TOptionFloat] with org.squeryl.dsl.DeOptionizer[Float,Float,org.squeryl.dsl.TFloat,Option[Float],org.squeryl.dsl.TOptionFloat]{val deOptionizer: org.squeryl.dsl.FloatTypedExpressionFactory[Float,org.squeryl.dsl.TFloat] with org.squeryl.dsl.PrimitiveJdbcMapper[Float]{val sample: Float; val defaultColumnLength: Int}} = PrimitiveTypeMode.this.optionFloatTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:63: expected start of definition
[error]     implicit <stable> <accessor> def doubleTEF: org.squeryl.dsl.FloatTypedExpressionFactory[Double,org.squeryl.dsl.TDouble] with org.squeryl.dsl.PrimitiveJdbcMapper[Double]{val sample: Double; val defaultColumnLength: Int} = PrimitiveTypeMode.this.doubleTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:65: expected start of definition
[error]     implicit <stable> <accessor> def optionDoubleTEF: org.squeryl.dsl.FloatTypedExpressionFactory[Option[Double],org.squeryl.dsl.TOptionDouble] with org.squeryl.dsl.DeOptionizer[Double,Double,org.squeryl.dsl.TDouble,Option[Double],org.squeryl.dsl.TOptionDouble]{val deOptionizer: org.squeryl.dsl.FloatTypedExpressionFactory[Double,org.squeryl.dsl.TDouble] with org.squeryl.dsl.PrimitiveJdbcMapper[Double]{val sample: Double; val defaultColumnLength: Int}} = PrimitiveTypeMode.this.optionDoubleTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:67: expected start of definition
[error]     implicit <stable> <accessor> def bigDecimalTEF: org.squeryl.dsl.FloatTypedExpressionFactory[BigDecimal,org.squeryl.dsl.TBigDecimal] with org.squeryl.dsl.PrimitiveJdbcMapper[BigDecimal]{val sample: scala.math.BigDecimal; val defaultColumnLength: Int} = PrimitiveTypeMode.this.bigDecimalTEF;
[error]              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/PrimitiveTypeMode.scala:69: expected start of definition
[error]     implicit <stable> <accessor> def optionBigDecimalTEF: org.squeryl.dsl.FloatTypedExpressionFactory[Option[BigDecimal],org.squeryl.dsl.TOptionBigDecimal] with org.squeryl.dsl.DeOptionizer[BigDecimal,BigDecimal,org.squeryl.dsl.TBigDecimal,Option[BigDecimal],org.squeryl.dsl.TOptionBigDecimal]{val deOptionizer: org.squeryl.dsl.FloatTypedExpressionFactory[BigDecimal,org.squeryl.dsl.TBigDecimal] with org.squeryl.dsl.PrimitiveJdbcMapper[BigDecimal]{val sample: scala.math.BigDecimal; val defaultColumnLength: Int}} = PrimitiveTypeMode.this.optionBigDecimalTEF;
[error]              ^
[info] [parsing Query.scala]
[info] [parsing Queryable.scala]
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Queryable.scala:19: in XML literal: in XML content, please use '}}' to express '}'
[error]   }
[error]   ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Queryable.scala:13:  I encountered a '}' where I didn't expect one, maybe this tag isn't closed <accessor>
[error]     <accessor> private[squeryl] def inhibited_=(x$1: Boolean): Unit = Queryable.this.inhibited = x$1;
[error]      ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Queryable.scala:20: '}' expected but eof found.
[error] }
[error]  ^
[info] [parsing Schema.scala]
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:49: in XML literal: name expected, but char ':' cannot start a name
[error]     def findTablesFor[A >: Nothing <: Any](a: A): Iterable[org.squeryl.Table[A]] = {
[error]                                     ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:49: in XML literal: '=' expected instead of ']'
[error]     def findTablesFor[A >: Nothing <: Any](a: A): Iterable[org.squeryl.Table[A]] = {
[error]                                          ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:49: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     def findTablesFor[A >: Nothing <: Any](a: A): Iterable[org.squeryl.Table[A]] = {
[error]                                           ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:49: in XML literal: whitespace expected
[error]     def findTablesFor[A >: Nothing <: Any](a: A): Iterable[org.squeryl.Table[A]] = {
[error]                                            ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:49: in XML literal: '>' expected instead of ':'
[error]     def findTablesFor[A >: Nothing <: Any](a: A): Iterable[org.squeryl.Table[A]] = {
[error]                                             ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:53: in XML literal: name expected, but char ':' cannot start a name
[error]     def findAllTablesFor[A >: Nothing <: Any](c: Class[A]): Traversable[org.squeryl.Table[_]] = Schema.this._tables.filter(((t: org.squeryl.Table[_]) => c.isAssignableFrom(t.posoMetaData.clasz))).asInstanceOf[Traversable[org.squeryl.Table[_]]];
[error]                                        ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:53: in XML literal: '=' expected instead of ']'
[error]     def findAllTablesFor[A >: Nothing <: Any](c: Class[A]): Traversable[org.squeryl.Table[_]] = Schema.this._tables.filter(((t: org.squeryl.Table[_]) => c.isAssignableFrom(t.posoMetaData.clasz))).asInstanceOf[Traversable[org.squeryl.Table[_]]];
[error]                                             ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:53: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     def findAllTablesFor[A >: Nothing <: Any](c: Class[A]): Traversable[org.squeryl.Table[_]] = Schema.this._tables.filter(((t: org.squeryl.Table[_]) => c.isAssignableFrom(t.posoMetaData.clasz))).asInstanceOf[Traversable[org.squeryl.Table[_]]];
[error]                                              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:53: in XML literal: whitespace expected
[error]     def findAllTablesFor[A >: Nothing <: Any](c: Class[A]): Traversable[org.squeryl.Table[_]] = Schema.this._tables.filter(((t: org.squeryl.Table[_]) => c.isAssignableFrom(t.posoMetaData.clasz))).asInstanceOf[Traversable[org.squeryl.Table[_]]];
[error]                                               ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:53: in XML literal: '>' expected instead of ':'
[error]     def findAllTablesFor[A >: Nothing <: Any](c: Class[A]): Traversable[org.squeryl.Table[_]] = Schema.this._tables.filter(((t: org.squeryl.Table[_]) => c.isAssignableFrom(t.posoMetaData.clasz))).asInstanceOf[Traversable[org.squeryl.Table[_]]];
[error]                                                ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:55: identifier expected but $XMLSTART$< found.
[error]       def <init>(): Schema.this.NamingConventionTransforms.type = {
[error]           ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:139: ']' expected but '.' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])(scala.None, scala.None) => scala.None
[error]                             ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:139: ']' expected but '.' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])(scala.None, scala.None) => scala.None
[error]                                                                                ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:139: '=>' expected but '(' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])(scala.None, scala.None) => scala.None
[error]                                                                                                            ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:140: ']' expected but '.' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])((x: org.squeryl.internals.ColumnAttribute)Some[org.squeryl.internals.ColumnAttribute](_), scala.None) => scala.Some.apply[String](Schema.this._dbAdapter.writeIndexDeclaration(cols, scala.None, name, true))
[error]                             ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:140: ']' expected but '.' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])((x: org.squeryl.internals.ColumnAttribute)Some[org.squeryl.internals.ColumnAttribute](_), scala.None) => scala.Some.apply[String](Schema.this._dbAdapter.writeIndexDeclaration(cols, scala.None, name, true))
[error]                                                                                ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:140: '=>' expected but '(' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])((x: org.squeryl.internals.ColumnAttribute)Some[org.squeryl.internals.ColumnAttribute](_), scala.None) => scala.Some.apply[String](Schema.this._dbAdapter.writeIndexDeclaration(cols, scala.None, name, true))
[error]                                                                                                            ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:141: ']' expected but '.' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])(scala.None, (x: org.squeryl.internals.Indexed)Some[org.squeryl.internals.Indexed]((nameOfIndex: Option[String])org.squeryl.internals.Indexed((idxName @ _)))) => scala.Some.apply[String](Schema.this._dbAdapter.writeIndexDeclaration(cols, idxName, name, false))
[error]                             ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:141: ']' expected but '.' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])(scala.None, (x: org.squeryl.internals.Indexed)Some[org.squeryl.internals.Indexed]((nameOfIndex: Option[String])org.squeryl.internals.Indexed((idxName @ _)))) => scala.Some.apply[String](Schema.this._dbAdapter.writeIndexDeclaration(cols, idxName, name, false))
[error]                                                                                ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:141: '=>' expected but '(' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])(scala.None, (x: org.squeryl.internals.Indexed)Some[org.squeryl.internals.Indexed]((nameOfIndex: Option[String])org.squeryl.internals.Indexed((idxName @ _)))) => scala.Some.apply[String](Schema.this._dbAdapter.writeIndexDeclaration(cols, idxName, name, false))
[error]                                                                                                            ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:142: ']' expected but '.' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])((x: org.squeryl.internals.ColumnAttribute)Some[org.squeryl.internals.ColumnAttribute](_), (x: org.squeryl.internals.Indexed)Some[org.squeryl.internals.Indexed]((nameOfIndex: Option[String])org.squeryl.internals.Indexed((idxName @ _)))) => scala.Some.apply[String](Schema.this._dbAdapter.writeIndexDeclaration(cols, idxName, name, true))
[error]                             ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:142: ']' expected but '.' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])((x: org.squeryl.internals.ColumnAttribute)Some[org.squeryl.internals.ColumnAttribute](_), (x: org.squeryl.internals.Indexed)Some[org.squeryl.internals.Indexed]((nameOfIndex: Option[String])org.squeryl.internals.Indexed((idxName @ _)))) => scala.Some.apply[String](Schema.this._dbAdapter.writeIndexDeclaration(cols, idxName, name, true))
[error]                                                                                ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:142: '=>' expected but '(' found.
[error]         case (_1: Option[org.squeryl.internals.ColumnAttribute], _2: Option[org.squeryl.internals.Indexed])(Option[org.squeryl.internals.ColumnAttribute], Option[org.squeryl.internals.Indexed])((x: org.squeryl.internals.ColumnAttribute)Some[org.squeryl.internals.ColumnAttribute](_), (x: org.squeryl.internals.Indexed)Some[org.squeryl.internals.Indexed]((nameOfIndex: Option[String])org.squeryl.internals.Indexed((idxName @ _)))) => scala.Some.apply[String](Schema.this._dbAdapter.writeIndexDeclaration(cols, idxName, name, true))
[error]                                                                                                            ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:196: in XML literal: name expected, but char ':' cannot start a name
[error]     protected def table[T >: Nothing <: Any]()(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = Schema.this.table[T](Schema.this.tableNameFromClass(manifestT.erasure))(manifestT, ked);
[error]                                       ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:196: in XML literal: '=' expected instead of ']'
[error]     protected def table[T >: Nothing <: Any]()(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = Schema.this.table[T](Schema.this.tableNameFromClass(manifestT.erasure))(manifestT, ked);
[error]                                            ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:196: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     protected def table[T >: Nothing <: Any]()(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = Schema.this.table[T](Schema.this.tableNameFromClass(manifestT.erasure))(manifestT, ked);
[error]                                             ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:196: in XML literal: whitespace expected
[error]     protected def table[T >: Nothing <: Any]()(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = Schema.this.table[T](Schema.this.tableNameFromClass(manifestT.erasure))(manifestT, ked);
[error]                                              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:196: in XML literal: '>' expected instead of '('
[error]     protected def table[T >: Nothing <: Any]()(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = Schema.this.table[T](Schema.this.tableNameFromClass(manifestT.erasure))(manifestT, ked);
[error]                                               ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: name expected, but char ':' cannot start a name
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                       ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: '=' expected instead of ']'
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                            ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                             ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: whitespace expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: name cannot end in ':'
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                   ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: '=' expected instead of 'S'
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                    ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                     ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: whitespace expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                      ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: '=' expected instead of ')'
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                          ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                           ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: whitespace expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                            ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: '=' expected instead of 'm'
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                     ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                      ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: whitespace expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                       ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: name cannot end in ':'
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                               ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: '=' expected instead of 's'
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                                ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                                 ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: whitespace expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                                  ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: '=' expected instead of '['
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                                                      ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                                                       ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: whitespace expected
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                                                        ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:197: in XML literal: '>' expected instead of ','
[error]     protected def table[T >: Nothing <: Any](name: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                                                                         ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:204: in XML literal: name expected, but char ':' cannot start a name
[error]     protected def table[T >: Nothing <: Any](name: String, prefix: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                       ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:204: in XML literal: '=' expected instead of ']'
[error]     protected def table[T >: Nothing <: Any](name: String, prefix: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                            ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:204: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     protected def table[T >: Nothing <: Any](name: String, prefix: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                             ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:204: in XML literal: whitespace expected
[error]     protected def table[T >: Nothing <: Any](name: String, prefix: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                              ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:204: in XML literal: name cannot end in ':'
[error]     protected def table[T >: Nothing <: Any](name: String, prefix: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                   ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:204: in XML literal: '=' expected instead of 'S'
[error]     protected def table[T >: Nothing <: Any](name: String, prefix: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                    ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:204: in XML literal: ' or " delimited attribute value or '{' scala-expr '}' expected
[error]     protected def table[T >: Nothing <: Any](name: String, prefix: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                     ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:204: in XML literal: whitespace expected
[error]     protected def table[T >: Nothing <: Any](name: String, prefix: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                      ^
[error] /home/vova/scala-projects/GSoC/compilerPlugins/testProjects/Squeryl/src/main/scala/org/squeryl/Schema.scala:204: in XML literal: '=' expected instead of ','
[error]     protected def table[T >: Nothing <: Any](name: String, prefix: String)(implicit manifestT: scala.reflect.Manifest[T], ked: org.squeryl.OptionalKeyedEntityDef[T, _]): org.squeryl.Table[T] = {
[error]                                                          ^
[info] [parsing Session.scala]
[info] [parsing Table.scala]
[info] [parsing View.scala]
[info] [parsing DB2Adapter.scala]
[info] [parsing DerbyAdapter.scala]
[info] [parsing H2Adapter.scala]
[info] [parsing MSSQLServer.scala]
[info] [parsing MySQLAdapter.scala]
[info] [parsing MySQLInnoDBAdapter.scala]
[info] [parsing OracleAdapter.scala]
[info] [parsing PostgreSqlAdapter.scala]
[info] [parsing package.scala]
[info] [parsing CustomTypesMode.scala]
[info] [parsing AbstractQuery.scala]
[info] [parsing CompositeKey.scala]
[info] [parsing DelegateQuery.scala]
[info] [parsing Group.scala]
[info] [parsing ManyToMany.scala]
[info] [parsing OptionalQueryable.scala]
[info] [parsing QueryDsl.scala]
[info] [parsing QueryYield.scala]
[info] [parsing SqlFunctions.scala]
[info] [parsing TypedExpression.scala]
[info] [parsing ExpressionNode.scala]
[info] [parsing OuterJoinExpression.scala]
[info] [parsing QueryExpressionElements.scala]
[info] [parsing QueryExpressionNode.scala]
[info] [parsing SelectElement.scala]
[info] [parsing UpdateStatement.scala]
[info] [parsing ViewExpressionNode.scala]
[info] [parsing ComputeMeasuresSignaturesFromGroupByState.scala]
[info] [parsing ComputeMeasuresSignaturesFromStartOrWhereState.scala]
[info] [parsing FromSignatures.scala]
[info] [parsing GroupBySignatures.scala]
[info] [parsing JoinSignatures.scala]
[info] [parsing OrderBySignatures.scala]
[info] [parsing Query1.scala]
[info] [parsing SampleTuple.scala]
[info] [parsing BaseQueryYield.scala]
[info] [parsing CaseOfChain.scala]
[info] [parsing CaseOfConditionChainStart.scala]
[info] [parsing CaseOfNonNumericalExpressionMatchStart.scala]
[info] [parsing CaseOfNumericalExpressionMatchStart.scala]
[info] [parsing StartState.scala]
[info] [parsing JoinedQueryable.scala]
[info] [parsing ArrayTEF.scala]
[info] [parsing ColumnAttribute.scala]
[info] [parsing DatabaseAdapter.scala]
[info] [parsing FieldMapper.scala]
[info] [parsing FieldMetaData.scala]
[info] [parsing FieldReferenceLinker.scala]
[info] [parsing FieldTypeHandler.scala]
[info] [parsing PosoLifecycleEvent.scala]
[info] [parsing PosoMetaData.scala]
[info] [parsing ResultSetMapper.scala]
[info] [parsing StatementWriter.scala]
[info] [parsing Utils.scala]
[info] [parsing BarChartRenderer.scala]
[info] [parsing LocalH2SinkStatisticsListener.scala]
[info] [parsing StatisticsListener.scala]
[info] [parsing StatsSchema.scala]
[info] [parsing UsageProfileConsolidator.scala]
[info] [parser in 2136ms]
[info] [total in 2143ms]
[info] [reset] recursing in package <root>
[error] 4620 errors found
[error] (compile:compile) Compilation failed
[error] Total time: 4 s, completed Jul 9, 2013 3:16:43 AM
